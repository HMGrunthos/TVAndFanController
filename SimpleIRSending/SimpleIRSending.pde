#include <avr/pgmspace.h>

// #include <IRremote.h>

// IRsend irSend;

PROGMEM const struct RLCType {
  unsigned short int code[2];
} rlcTypes[4] = {{0x80, 0x40}, {0x10, 0x10}, {0x10, 0x30}, {0x10, 0xACE}};

PROGMEM const byte irCmdsEnc[][13] = {
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x55, 0x59, 0x55, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x99, 0x55, 0x99, 0x55, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA5, 0x55, 0xA5, 0x55, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA9, 0x55, 0xA9, 0x55, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x95, 0x56, 0x95, 0x56, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA9, 0x56, 0xA9, 0x56, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x55, 0x65, 0x55, 0x65, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x65, 0x59, 0x65, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x69, 0x59, 0x69, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x65, 0x69, 0x65, 0x69, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x6A, 0x59, 0x6A, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x99, 0x6A, 0x99, 0x6A, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA5, 0x6A, 0xA5, 0x6A, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA9, 0x6A, 0xA9, 0x6A, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x96, 0x59, 0x96, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x65, 0x96, 0x65, 0x96, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x69, 0x96, 0x69, 0x96, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA5, 0x96, 0xA5, 0x96, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA9, 0x96, 0xA9, 0x96, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x65, 0x99, 0x65, 0x99, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA9, 0xA5, 0xA9, 0xA5, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x65, 0xAA, 0x65, 0xAA, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x95, 0xAA, 0x95, 0xAA, 0xE},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x96, 0x5A, 0x96, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x59, 0x99, 0x5A, 0x99, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x95, 0x99, 0x96, 0x99, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA5, 0x9A, 0xA6, 0x9A, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x65, 0xA5, 0x66, 0xA5, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0x99, 0xA5, 0x9A, 0xA5, 0xD},
  {0x64, 0x55, 0x55, 0x65, 0x55, 0x55, 0x56, 0x55, 0xA5, 0xA5, 0xA6, 0xA5, 0xD}
};

/*
struct RLCType {
  unsigned short int code[2];
} rlcTypes[10];
byte nRLCTypes = 0;

PROGMEM const unsigned short int irCmds[][100] = {
  {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE
  }, {0x0080, 0x0040,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0010,
  0x0010, 0x0030,
  0x0010, 0x0030,
  0x0010, 0x0010,
  0x0010, 0x0ACE}
};

PROGMEM const unsigned short int  commandTable[] = {
  1,
  5,
  6,
  7,
  12,
  15,
  32,
  33,
  49,
  50,
  57,
  61,
  62,
  63,
  73,
  74,
  75,
  78,
  79,
  82,
  103,
  122,
  124,
  201,
  209,
  212,
  222,
  226,
  229,
  230,  
};
*/

#define NCMDS 30
#define CMDLEN 100
#define CMDFREQ 37000
#define CMDPERIOD (1000000/(float)CMDFREQ)
#define CMDPREMAIN ((unsigned int)(1/(CMDPERIOD - ((int)(CMDPERIOD))) + 0.5))

volatile unsigned short int irCmdPad[CMDLEN];
volatile unsigned short int *irPadPtr;
volatile byte irSendCmdIdx;

void setup()
{
  // Set up TIMER0 for PWM controlling the fan
  TCCR1A = (1<<COM1A1) | (1<<COM1A0);
  TCCR1B = (1<<WGM13) | (1<<CS10);
  ICR1 = 340;

  // COM2A = 00: disconnect OC2A
  // COM2B = 00: disconnect OC2B; to send signal set to 10: OC2B non-inverted
  // WGM2 = 101: phase-correct PWM with OCRA as top
  // CS2 = 000: no prescaling
  TCCR2A = _BV(WGM20);
  TCCR2B = _BV(WGM22) | _BV(CS20);
  OCR2A = 216; // The top value for the timer.  The modulation frequency will be SYSCLOCK / 2 / OCR2A.
  OCR2B = OCR2A / 3; // 33% duty cycle 

  Serial.begin(57600);

  pinMode(2, INPUT);
  pinMode(3, OUTPUT);
  digitalWrite(3, LOW);
  pinMode(9, OUTPUT);
  digitalWrite(9, HIGH);
}

void loop() {
/*
  delay(1000);
  digitalWrite(3, HIGH);
  signed short int fromPin5 = analogRead(5);
  signed short int fromPin4 = analogRead(4);
  signed short int fromPin3 = analogRead(3);
  digitalWrite(3, LOW);
  Serial.print("Voltage at pin 3:");
  Serial.print((5*fromPin3)/(float)(1024), 3);
  Serial.print(": 4:");
  Serial.print((5*fromPin4)/(float)(1024), 3);
  Serial.print(": 5:");
  Serial.print((5*fromPin5)/(float)(1024), 3);
  Serial.print(": Arduino pin 2 current ");
  Serial.print((fromPin4-fromPin3)*(500/(float)(1024*11)), 1);
  Serial.print("mA Emitter current ");
  Serial.print(fromPin5*(5000/(float)(1024*1.2)), 1);
  Serial.print("mA Estimated collector current ");
  Serial.print(fromPin5*(5000/(float)(1024*1.2)) - (fromPin4-fromPin3)*(500/(float)(1024*11)), 1);
  Serial.println("mA");
  delay(1000);
*/
/*
    for(byte cmdIdx=0; cmdIdx < NCMDS; cmdIdx++) {
      encodeTimes(irCmds[cmdIdx], rlcTypes, &nRLCTypes, encIRCmds[0]);
      Serial.print("Command :");
      Serial.println(cmdIdx, DEC);
      Serial.print("{");
      for(byte idx = 0; idx < 13; idx++) {
        Serial.print(encIRCmds[0][idx], HEX);
        Serial.print(", ");
      }
      Serial.println("}");
    }

    for(byte typeIdx = 0; typeIdx < nRLCTypes; typeIdx++) {
      Serial.print("Entry :");
      Serial.println(typeIdx, DEC);
      Serial.print("{");
      Serial.print(rlcTypes[typeIdx].code[0], HEX);
      Serial.print(", ");
      Serial.print(rlcTypes[typeIdx].code[1], HEX);
      Serial.println("}");
    }
*/
    unsigned long tFirst;

    delay(5000);
    Serial.println("Sending Power command...");
    //digitalWrite(2, HIGH);
    tFirst = millis();
    decodeTimes(irCmdsEnc[11], rlcTypes, irCmdPad);
    while(irSendCmdIdx != 0);
    Serial.print("Took:");
    Serial.println(millis()-tFirst);
    // irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    //digitalWrite(2, HIGH);
    //delay(100);
    //digitalWrite(2, LOW);
    
    delay(5000);
    Serial.println("Sending Power On command...");
    //digitalWrite(2, HIGH);
    tFirst = millis();
    decodeTimes(irCmdsEnc[12], rlcTypes, irCmdPad);
    while(irSendCmdIdx != 0);
    Serial.print("Took:");
    Serial.println(millis()-tFirst);
    // irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    //delay(100);
    //digitalWrite(2, LOW);
    
    delay(5000);
    Serial.println("Sending Power Off command...");
    //digitalWrite(2, HIGH);
    tFirst = millis();
    decodeTimes(irCmdsEnc[13], rlcTypes, irCmdPad);
    while(irSendCmdIdx != 0);
    Serial.print("Took:");
    Serial.println(millis()-tFirst);
    // irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    //delay(100);
    //digitalWrite(2, LOW);

/*
    delay(5000);
    Serial.println("Sending Power command...");
    digitalWrite(2, HIGH);
    translateTimes(irCmds[11], irCmdPad);
    irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    digitalWrite(2, HIGH);
    delay(100);
    digitalWrite(2, LOW);
    
    delay(5000);
    Serial.println("Sending Power On command...");
    digitalWrite(2, HIGH);
    translateTimes(irCmds[12], irCmdPad);
    irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    delay(100);
    digitalWrite(2, LOW);
    
    delay(5000);
    Serial.println("Sending Power Off command...");
    digitalWrite(2, HIGH);
    translateTimes(irCmds[13], irCmdPad);
    irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
    delay(100);
    digitalWrite(2, LOW);
*/
  // Serial.println("Sent command...");
}

void decodeTimes(PROGMEM const byte *inCmd, PROGMEM const struct RLCType *rlcTypes, volatile unsigned short int *outCmd)
{
  const unsigned short int NCMDPAIRS = CMDLEN/2;
  const byte *cmdPtr = inCmd;
  byte currCmdByte = pgm_read_byte(cmdPtr);

  for(byte pairIdx = 0; pairIdx < NCMDPAIRS; ) {
    unsigned short int cmdPair[2];
    byte rlcType;

    // Serial.print("Command :");
    // Serial.print(pairIdx, DEC);
    // Serial.print(": current byte :");
    // Serial.print(currCmdByte, BIN);
    
    rlcType = currCmdByte & 0x3;
    // Serial.print(": current code :");
    // Serial.print(rlcType, DEC);
    cmdPair[0] = pgm_read_word(rlcTypes[rlcType].code+0);
    // Serial.print(": words:0x");
    // Serial.print(*outCmd++, HEX);
    // Serial.print(", 0x");
    cmdPair[1] = pgm_read_word(rlcTypes[rlcType].code+1);
    // Serial.print(*outCmd++, HEX);
    // Serial.println(":");

    outCmd = translatePairTimes(cmdPair, outCmd);
    
    // Turn on the timer overflow interrupt if this is the first pair we've decoded
    if(pairIdx == 0) {
      irSendCmdIdx = CMDLEN;
      irPadPtr = irCmdPad;

      TCCR2A |= _BV(COM2B1); // Enable pin 3 PWM output
      TIMSK1 |= (1<<TOIE1); // Enable interrupt
    }
      
    currCmdByte = currCmdByte >> 2;
    pairIdx++;

    if(!(pairIdx%4)) {
      currCmdByte = pgm_read_byte(++cmdPtr);
    }
  }
}

volatile unsigned short int *translatePairTimes(unsigned short int *inPair, volatile unsigned short int *outPair)
{
  *outPair++ = (*inPair++*5)/8; // Convert from 27KHz cycles to 23125Hz cycles
  *outPair++ = (*inPair*5)/8; // Convert from 27KHz cycles to 23125Hz cycles

  return outPair;
}

ISR(TIMER1_OVF_vect)
{
  if(--(*irPadPtr) == 0) {
    if(--irSendCmdIdx == 0) { // Move to next command and disable this interrupt when done
      TIMSK1 &= ~(1<<TOIE1);
      return;
    }
    irPadPtr++; // Next interval
    TCCR2A ^= _BV(COM2B1); // Toggle pin 3 PWM output
  }
}

void translateTimes(PROGMEM const unsigned short int *inCmd, unsigned short int *outCmd)
{
  for(int idx = 0; idx < CMDLEN; idx++) {
    outCmd[idx] = pgm_read_word(&(inCmd[idx]));
    // Serial.println(outCmd[idx]);
    outCmd[idx] = outCmd[idx]*(int)CMDPERIOD + (((outCmd[idx]<<1)/CMDPREMAIN + 1) >> 1);
    // Serial.println(outCmd[idx]);
  }
}

/*
  int inByte = Serial.read();
  switch(inByte) {
    case ']':
      // Serial.println("Sending VolUp command...");
      translateTimes(irCmds[6], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case '[':
      // Serial.println("Sending VolDown command...");
      translateTimes(irCmds[7], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'r':
      // Serial.println("Sending Return command...");
      translateTimes(irCmds[25], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'n':
      // Serial.println("Sending Normalise command...");
      translateTimes(irCmds[4], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'e':
      // Serial.println("Sending Enter command...");
      translateTimes(irCmds[14], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'w':
      // Serial.println("Sending Up command...");
      translateTimes(irCmds[15], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 's':
      // Serial.println("Sending Down command...");
      translateTimes(irCmds[16], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'a':
      // Serial.println("Sending Left command...");
      translateTimes(irCmds[17], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'd':
      // Serial.println("Sending Right command...");
      translateTimes(irCmds[18], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'p':
      // Serial.println("Sending Setup command...");
      translateTimes(irCmds[19], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 't':
      // Serial.println("Sending Select command...");
      translateTimes(irCmds[27], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'i':
      // Serial.println("Sending Picture command...");
      translateTimes(irCmds[2], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'o':
      // Serial.println("Sending Sound command...");
      translateTimes(irCmds[3], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'u':
      // Serial.println("Sending Surround command...");
      translateTimes(irCmds[8], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'm':
      // Serial.println("Sending Mute command...");
      translateTimes(irCmds[9], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'c':
      // Serial.println("Sending Recall command...");
      translateTimes(irCmds[10], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'y':
      // Serial.println("Sending Input command...");
      translateTimes(irCmds[1], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case 'z':
      // Serial.println("Sending Aspect command...");
      translateTimes(irCmds[26], irCmdPad);
      irSend.sendRaw(irCmdPad, CMDLEN, CMDFREQ/1000);
      break;
    case -1:
      return;
      break;
    default:
      Serial.println("Invalid command...");
      return;
      break;
  }
*/
